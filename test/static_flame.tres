[gd_resource type="VisualShader" load_steps=20 format=3 uid="uid://cgrgywthsk3un"]

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_da7l5"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_0vcsy"]
parameter_name = "DisolveTexture"
color_default = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_eiv1g"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_i2t01"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_7tdrq"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, 0.5]
op_type = 6

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_xwnle"]
parameter_name = "DisolveAmount"
hint = 1
default_value_enabled = true

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_6hgbi"]

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_ctwbl"]
parameter_name = "DisolveSpeed"
default_value_enabled = true
default_value = Vector2(0, 0.023)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_syofx"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_vglje"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_yo802"]
parameter_name = "MainTexture"
color_default = 2

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_im4wq"]
parameter_name = "DisolveTiling"
default_value_enabled = true
default_value = Vector2(0.25, 0.2)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_0dku2"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_8vasm"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_tvpr3"]
input_name = "color"

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_5scvr"]
parameter_name = "ColorParaeter"
default_value = Color(0.464014, 0.105478, 0.295177, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_d7jn1"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_64bwm"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeBillboard" id="VisualShaderNodeBillboard_mgmi1"]
billboard_type = 3
keep_scale = true

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D MainTexture : hint_default_transparent;
uniform vec2 DisolveTiling = vec2(0.250000, 0.200000);
uniform vec2 DisolveSpeed = vec2(0.000000, 0.023000);
uniform sampler2D DisolveTexture : hint_default_transparent;
uniform float DisolveAmount : hint_range(0, 1) = 0;



void vertex() {
	mat4 n_out2p0;
// GetBillboardMatrix:2
	{
		mat4 __wm = mat4(normalize(INV_VIEW_MATRIX[0]), normalize(INV_VIEW_MATRIX[1]), normalize(INV_VIEW_MATRIX[2]), MODEL_MATRIX[3]);
		__wm = __wm * mat4(vec4(cos(INSTANCE_CUSTOM.x), -sin(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(sin(INSTANCE_CUSTOM.x), cos(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		__wm = __wm * mat4(vec4(length(MODEL_MATRIX[0].xyz), 0.0, 0.0, 0.0), vec4(0.0, length(MODEL_MATRIX[1].xyz), 0.0, 0.0), vec4(0.0, 0.0, length(MODEL_MATRIX[2].xyz), 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		n_out2p0 = VIEW_MATRIX * __wm;
	}


// Output:0
	MODELVIEW_MATRIX = n_out2p0;


}

void fragment() {
// Input:23
	vec4 n_out23p0 = COLOR;


	vec4 n_out8p0;
// Texture2D:8
	n_out8p0 = texture(MainTexture, UV);


// Input:21
	vec2 n_out21p0 = UV;


// Vector2Parameter:20
	vec2 n_out20p0 = DisolveTiling;


// VectorOp:22
	vec2 n_out22p0 = n_out21p0 * n_out20p0;


// Input:18
	float n_out18p0 = TIME;


// Vector2Parameter:17
	vec2 n_out17p0 = DisolveSpeed;


// VectorOp:19
	vec2 n_out19p0 = vec2(n_out18p0) * n_out17p0;


// UVFunc:16
	vec2 n_in16p1 = vec2(1.00000, 1.00000);
	vec2 n_out16p0 = n_out19p0 * n_in16p1 + n_out22p0;


	vec4 n_out12p0;
// Texture2D:12
	n_out12p0 = texture(DisolveTexture, n_out16p0);


// VectorOp:13
	vec4 n_out13p0 = n_out8p0 * n_out12p0;


// FloatParameter:15
	float n_out15p0 = DisolveAmount;


// Mix:14
	vec4 n_out14p0 = mix(n_out8p0, n_out13p0, n_out15p0);


// VectorOp:9
	vec4 n_out9p0 = n_out23p0 * n_out14p0;


// VectorDecompose:10
	float n_out10p0 = n_out9p0.x;
	float n_out10p1 = n_out9p0.y;
	float n_out10p2 = n_out9p0.z;
	float n_out10p3 = n_out9p0.w;


// Output:0
	ALBEDO = vec3(n_out9p0.xyz);
	ALPHA = n_out10p3;


}
"
nodes/vertex/2/node = SubResource("VisualShaderNodeBillboard_mgmi1")
nodes/vertex/2/position = Vector2(200.574, 316.089)
nodes/vertex/connections = PackedInt32Array(2, 0, 0, 10)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_yo802")
nodes/fragment/2/position = Vector2(-840, 360)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorParameter_5scvr")
nodes/fragment/7/position = Vector2(-280, 20)
nodes/fragment/8/node = SubResource("VisualShaderNodeTexture_d7jn1")
nodes/fragment/8/position = Vector2(-600, 420)
nodes/fragment/9/node = SubResource("VisualShaderNodeVectorOp_64bwm")
nodes/fragment/9/position = Vector2(-20, 140)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorDecompose_da7l5")
nodes/fragment/10/position = Vector2(200, 440)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture2DParameter_0vcsy")
nodes/fragment/11/position = Vector2(-940, 720)
nodes/fragment/12/node = SubResource("VisualShaderNodeTexture_eiv1g")
nodes/fragment/12/position = Vector2(-640, 700)
nodes/fragment/13/node = SubResource("VisualShaderNodeVectorOp_i2t01")
nodes/fragment/13/position = Vector2(-120, 560)
nodes/fragment/14/node = SubResource("VisualShaderNodeMix_7tdrq")
nodes/fragment/14/position = Vector2(-220, 420)
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatParameter_xwnle")
nodes/fragment/15/position = Vector2(-420, 540)
nodes/fragment/16/node = SubResource("VisualShaderNodeUVFunc_6hgbi")
nodes/fragment/16/position = Vector2(-920, 580)
nodes/fragment/17/node = SubResource("VisualShaderNodeVec2Parameter_ctwbl")
nodes/fragment/17/position = Vector2(-1300, 680)
nodes/fragment/18/node = SubResource("VisualShaderNodeInput_syofx")
nodes/fragment/18/position = Vector2(-1340, 620)
nodes/fragment/19/node = SubResource("VisualShaderNodeVectorOp_vglje")
nodes/fragment/19/position = Vector2(-1080, 600)
nodes/fragment/20/node = SubResource("VisualShaderNodeVec2Parameter_im4wq")
nodes/fragment/20/position = Vector2(-1320, 440)
nodes/fragment/21/node = SubResource("VisualShaderNodeInput_0dku2")
nodes/fragment/21/position = Vector2(-1320, 400)
nodes/fragment/22/node = SubResource("VisualShaderNodeVectorOp_8vasm")
nodes/fragment/22/position = Vector2(-1079.2, 442.614)
nodes/fragment/23/node = SubResource("VisualShaderNodeInput_tvpr3")
nodes/fragment/23/position = Vector2(-320, -40)
nodes/fragment/connections = PackedInt32Array(2, 0, 8, 2, 10, 3, 0, 1, 9, 0, 10, 0, 9, 0, 0, 0, 11, 0, 12, 2, 8, 0, 13, 0, 12, 0, 13, 1, 8, 0, 14, 0, 13, 0, 14, 1, 14, 0, 9, 1, 15, 0, 14, 2, 16, 0, 12, 0, 18, 0, 19, 0, 17, 0, 19, 1, 19, 0, 16, 2, 21, 0, 22, 0, 20, 0, 22, 1, 22, 0, 16, 0, 23, 0, 9, 0)
